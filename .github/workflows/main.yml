name: QMK Firmware Build # Nome do seu fluxo de trabalho

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: qmkfirmware/qmk_cli:latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up QMK build environment
      run: |
        qmk setup -y

    - name: Locate QMK Firmware path
      id: qmk_path
      run: |
        echo "QMK_PATH=$(qmk config user.qmk_firmware)" >> $GITHUB_OUTPUT

    - name: Find JSON layout file # Adicionado: Encontra o arquivo JSON do seu layout
      id: find_layout
      run: |
        # Este comando procura um arquivo .json dentro da pasta 'layouts'.
        # Se você tiver mais de um, precisa ajustar para apontar para o correto.
        # Exemplo: LAYOUT_FILE=$(find ${{ github.workspace }}/layouts -name "seu_layout_especifico.json" | head -n 1)
        LAYOUT_FILE=$(find ${{ github.workspace }}/layouts -name "*.json" | head -n 1)
        if [ -z "$LAYOUT_FILE" ]; then
          echo "Erro: Nenhum arquivo .json encontrado na pasta layouts."
          exit 1
        fi
        echo "LAYOUT_FILE=$LAYOUT_FILE" >> $GITHUB_OUTPUT

    - name: Generate keymap from JSON # Adicionado: Converte JSON para keymap.c
      run: |
        # Você precisa fornecer o nome do seu teclado e um nome para o keymap que será gerado.
        # EXTREMAMENTE IMPORTANTE: Substitua 'seu_teclado' pelo nome da pasta do seu teclado QMK
        # e 'meu_layout_gerado' pelo nome que você quer para a pasta do keymap gerado.
        # Este 'meu_layout_gerado' será o -km no comando compile.
        qmk generate-keymap -kb seu_teclado -km meu_layout_gerado ${{ steps.find_layout.outputs.LAYOUT_FILE }}
      working-directory: ${{ steps.qmk_path.outputs.QMK_PATH }}


    - name: Build firmware
      run: |
        # Agora você compila usando o nome do teclado e o nome do keymap gerado ('meu_layout_gerado')
        qmk compile -kb seu_teclado -km meu_layout_gerado
      working-directory: ${{ steps.qmk_path.outputs.QMK_PATH }}

    - name: Upload firmware artifact
      uses: actions/upload-artifact@v4
      with:
        name: qmk_firmware_bin
        path: ${{ steps.qmk_path.outputs.QMK_PATH }}/*.hex
        # path: ${{ steps.qmk_path.outputs.QMK_PATH }}/*.{hex,bin,uf2}